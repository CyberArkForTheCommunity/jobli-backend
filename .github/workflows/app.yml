name: Jobli pipeline
on: push
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: 'eu-west-1'
      AWS_DEFAULT_REGION: 'eu-west-1'
      CDK_REQUIRE_APPROVAL: 'never'
      PIPENV_VENV_IN_PROJECT: true

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install pipenv
        run: python -m pip install pipenv

      - uses: actions/cache@v2
        id: cache-pipenv
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-venv-${{ hashFiles('Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv sync --dev

      - name: Run unit tests
        run: pipenv run pytest -v tests/unit --junitxml test-results/unit-test-results.xml

      - name: Build lambda
        run: |
          pipenv install docker --dev
          pipenv run pip list
          pipenv run ./build.py

      - name: Setup node.js (for AWS CDK)
        uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: Check node version
        run: node --version

      - name: Check npm version
        run: npm --version

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Deploy
        run: |
          pipenv run ./deploy.py --no-build --region ${AWS_DEFAULT_REGION} --require-approval ${CDK_REQUIRE_APPROVAL}

      - name: Integration tests
        run: |
          pipenv run pytest -v tests/integration --junitxml test-results/integration-test-results.xml

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: test-results/**/*.xml

      - name: destroy created environemnt
        run: pipenv run ./env_destroy.py